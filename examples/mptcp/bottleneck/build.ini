## For Config have a look here
## http://www.omnetpp.org/listarchive/msg09348.php
[Config TEST_Netperfmeter]
#############################################################################################
extends = Bottleneck_NetPerfMeter															#
# extends = TCP_Netperfmeter																#
# extends = SCTP_Netperfmeter																#
description = "Setup with Bottleneck"														#
#############################################################################################
**.mptcp*.netPerfMeterApp[*].startTime       				= 1.0 s # uniform(0.9s,1.1s)
**.mptcp*.netPerfMeterApp[*].resetTime       				=  60 s # 19 s => Window Up 
**.mptcp*.netPerfMeterApp[*].stopTime        				= 300 s # 300 s # 60 s

**.server*.netPerfMeterApp[*].connectTime      				= 0.001 s
**.server*.netPerfMeterApp[*].startTime         			= 0.1 s# uniform(0.9s,1.1s)
**.server*.netPerfMeterApp[*].resetTime         			=  60 s # 19 s
**.server*.netPerfMeterApp[*].stopTime          			= 400 s

**.default1*.netPerfMeterApp[*].startTime       			= 2.95 s #uniform(0.9s,1.1s) -
**.default1*.netPerfMeterApp[*].resetTime      				= 60 s		 # 19 s
**.default1*.netPerfMeterApp[*].stopTime       				= 300 s 	 # 300 s # 60 s

[Config TCP_Netperfmeter]
#############################################################################################
extends = Bottleneck_NetPerfMeter																#
description = "Setup with Bottleneck TCP"														#
#############################################################################################
**.*.netPerfMeter[*].protocol      							= "TCP"
**.*.tcp.multipath 											= false	# true false
#**.default1*.netPerfMeter[*].startTime       				= 1.1 s #uniform(0.9s,1.1s) -
#**.mptcp*.netPerfMeter[*].startTime       					= 1.0 s # uniform(0.9s,1.1s)


[Config SCTP_Netperfmeter]
#############################################################################################
extends = Bottleneck_NetPerfMeter																#
description = "Setup with Bottleneck SCTP"														#
#############################################################################################
**.*.netPerfMeter[*].protocol      							= "SCTP"
**.*.sctp.cmtCCVariant 										= "off" # "cmt"
#**.default1*.netPerfMeter[*].startTime       				= 1.1 s #uniform(0.9s,1.1s) -
#**.mptcp*.netPerfMeter[*].startTime       					= 1.0 s # uniform(0.9s,1.1s)

[Config Bottleneck_NetPerfMeter]
#############################################################################################
extends = Default_NetPerfMeter 								    # 
description = "Setup with Bottleneck" #
#############################################################################################


## Default Client
#############################################################################################
**.default1*.tcp.multipath 									= false	# true false
**.default1*.tcp.multipath_DSSSeqNo8   						= false
**.default1*.tcp.multipath_DSSDataACK8 						= false
## Note multipath_ordered:  only for test -> false switch of ordering for multipath
**.default1*.tcp.multipath_ordered 							= true 
**.default1*.tcp.multipath_Scheduler 						= "MPTCP_RoundRobinScheduler"
#**.default1*.tcp.multipath_receiveQueueClass 				= "TCPMultipathMsgBasedRcvQueue"

## Server 2
#############################################################################################
**.server2*.tcp.multipath 									= false	# true false
**.server2*.tcp.multipath_DSSSeqNo8   						= false
**.server2*.tcp.multipath_DSSDataACK8 						= false
## Note multipath_ordered:  only for test -> false switch of ordering for multipath
**.server2*.tcp.multipath_ordered 							= true 
**.server2*.tcp.multipath_Scheduler 						= "MPTCP_RoundRobinScheduler"
#**.server2*.tcp.multipath_receiveQueueClass 				= "TCPMultipathMsgBasedRcvQueue"

## Default Client (netPerfMeterApp) 
## not MPTCP -> see under  Default_netPerfMeterApp
#############################################################################################
**.default1*.netPerfMeterApp[*].activeMode      			= true
**.default1*.netPerfMeterApp[*].connectTime    		 		= 0.001 s
**.default1*.netPerfMeterApp[*].startTime       			= uniform(0.9s,1.1s)
**.default1*.netPerfMeterApp[*].resetTime      				= 30 s		 # 19 s
**.default1*.netPerfMeterApp[*].stopTime       				= 300 s 	 # 300 s # 60 s
**.default1*.netPerfMeterApp[*].queueSize       			= 2500000 B  # 5e+06 B | 250000 B
## Note maxMsgSize:  Be careful 1456 - 32  
**.default1*.netPerfMeterApp[*].maxMsgSize      			= 1424 B # (options = 32)
**.default1*.netPerfMeterApp[*].frameRate      				= 0 Hz
## Note maxMsgSize:  Be careful 1456 - 32  
**.default1*.netPerfMeterApp[*].frameSize       			= 1424 B # (options = 32)
**.default1*.netPerfMeterApp[*].frameRateString 			= ""
**.default1*.netPerfMeterApp[*].frameSizeString 			= ""
**.default1*.netPerfMeterApp[*].onTime          			= -1s
**.default1*.netPerfMeterApp[*].offTime         			= -1s
**.default1*.netPerfMeterApp[*].maxReconnects  	 			= 0
## Special connections for szenario
#############################################################################################
**.default1.numNetPerfMetersApps              				= 1   # 1 Flows
**.default1.netPerfMeterApp[*].remotePort    				= 8000
**.default1.netPerfMeterApp[*].localAddress  				= "10.100.0.1"
**.default1.netPerfMeterApp[*].remoteAddress 				= "10.200.0.2"
**.default1.netPerfMeterApp[*].protocol      				= "SCTP"

**.server2.netPerfMeterApp[*].localPort     				= 8000+${server2ID=ancestorIndex(0)}
**.server2.netPerfMeterApp[*].localAddress  				= "0.0.0.0"
**.server2.numNetPerfMetersApps             				= 1
**.server2.netPerfMeterApp[*].protocol      				= "SCTP"


#############################################################################################
[Config Default_NetPerfMeter]																#
description = "MPTCP Default with netPerfMeterApp"												#
#############################################################################################
## Nothing special, just one server1 and one mptcp client
#############################################################################################

## Common network settings
#############################################################################################
## SET MTU of PPP
**.*.ppp[*].ppp.mtu = 1500 B

#############################################################################################
## Topology Settings
#############################################################################################

## Router
#############################################################################################
# **.server1*.ppp[0].ppp.mtu             = 1500	# individual configuration

## Router Queues
#############################################################################################

### RED Queue (Obsolate)
#**.router*.ppp[*].queueType           						= "REDQueue"
#**.router*.ppp[*].queue.wq            						= 0.02
#**.router*.ppp[*].queue.minth         						= 30 # 30
#**.router*.ppp[*].queue.maxth         						= 90
#**.router*.ppp[*].queue.maxp          						= 0.1
#**.router*.ppp[*].queue.frameCapacity 						= 100
#**.router*.ppp[*].queue.pkrate        						= 833.333
## RED Queue (New 2013)
**.router*.ppp[*].queueType 							= "DSQueue2"
**.router*.ppp[*].queue.beQueue.frameCapacity 			= 100
**.router*.ppp[*].queue.red.minths 						= "30"
**.router*.ppp[*].queue.red.maxths 						= "90"
**.router*.ppp[*].queue.red.maxps 						= "0.1"
**.router*.ppp[*].queue.wrr.weights 					= "1 1"

## FIFI QUEUE
#**.ppp[*].queueType = "DropTailQueue" # in routers
#**.ppp[*].queue.frameCapacity = 100000000    # in routers

## server1
#############################################################################################
## netPerfMeterApp Passive Node
**.server*.netPerfMeterApp[*].activeMode        		= false
**.server*.netPerfMeterApp[*].connectTime      			= 0.001 s
**.server*.netPerfMeterApp[*].startTime         		= 0.1 s
**.server*.netPerfMeterApp[*].resetTime         		= 30 s # 19 s
**.server*.netPerfMeterApp[*].stopTime          		= 340 s
**.server*.netPerfMeterApp[*].queueSize         		= 5e+06 B # Think on arcwnd -> see TCP
#**.server1*.netPerfMeterApp[*].unordered         		= 1
#**.server1*.netPerfMeterApp[*].unreliable        		= 0
#**.server1*.netPerfMeterApp[*].maxInboundStreams 		= 16
**.server*.netPerfMeterApp[*].frameRate         		= 0 Hz
**.server*.netPerfMeterApp[*].frameSize         		= 1424 B
**.server*.netPerfMeterApp[*].frameRateString  	 		= ""
**.server*.netPerfMeterApp[*].frameSizeString   		= ""
# Be careful 1456 - 32 
**.server*.netPerfMeterApp[*].maxMsgSize        		= 1424 B	# (options = 32)

## mptcp client
#############################################################################################
## netPerfMeterApp Active Node
**.mptcp*.netPerfMeterApp[*].activeMode      			= true
**.mptcp*.netPerfMeterApp[*].connectTime     			= 0.001 s
**.mptcp*.netPerfMeterApp[*].startTime       			= uniform(0.9s,1.1s)
**.mptcp*.netPerfMeterApp[*].resetTime       			= 30 s# 19 s => Window Up 
**.mptcp*.netPerfMeterApp[*].stopTime        			= 300 s # 300 s # 60 s
**.mptcp*.netPerfMeterApp[*].queueSize      	 		= 2500000 B  # 5e+06 B (5000000b) | 250000 B
#**.mptcp*.netPerfMeterApp[*].unordered       			= 1
#**.mptcp*.netPerfMeterApp[*].unreliable      			= 0
#**.mptcp*.netPerfMeterApp[*].outboundStreams 			= 1
#**.mptcp*.netPerfMeterApp[*].maxMsgSize     			= 1452 B
# Be careful 1456 - 32 
**.mptcp*.netPerfMeterApp[*].maxMsgSize      			= 1424 B #  (options = 32)
**.mptcp*.netPerfMeterApp[*].frameRate       			= 0 Hz
**.mptcp*.netPerfMeterApp[*].frameSize       			= 1424 B
# Be careful 1456 - 32 
**.mptcp*.netPerfMeterApp[*].frameRateString			= ""
**.mptcp*.netPerfMeterApp[*].frameSizeString			= ""
**.mptcp*.netPerfMeterApp[*].onTime         			= -1s
**.mptcp*.netPerfMeterApp[*].offTime        			= -1s
**.mptcp*.netPerfMeterApp[*].maxReconnects  			= 0



## Common connection setup
#############################################################################################
**.mptcp1.numNetPerfMetersApps              			= 1 # 1
**.mptcp1.netPerfMeterApp[*].remotePort   	 			= 8000
**.mptcp1.netPerfMeterApp[*].localAddress  				= "10.1.1.1"
**.mptcp1.netPerfMeterApp[*].remoteAddress 				= "10.1.2.2"
## Alternative Route
#**.mptcp1.netPerfMeterApp[*].localAddress  			= "10.2.3.1"
#**.mptcp1.netPerfMeterApp[*].remoteAddress 			= "10.2.4.2"
##**.mptcp*.netPerfMeterApp[*].primaryPath   = "MPTCPTestNetwork.server1Main[" + string(${alphaMainmptcpID}) + "]/ppp0"
**.mptcp1.netPerfMeterApp[*].protocol      				= "TCP"


**.server1.netPerfMeterApp[*].localPort     			= 8000+${server1ID=ancestorIndex(0)}
**.server1.netPerfMeterApp[*].localAddress 	 			= "0.0.0.0"
**.server1.numNetPerfMetersApps              			= 1
**.server1.netPerfMeterApp[*].protocol      			= "TCP"

## Protocols
#############################################################################################

## TCP Parameters
#################################
**.*.tcp.advertisedWindow       						= 5e+06
**.*.tcp.mss                    						= 1456 # 1456	# Alternative 1452
**.*.tcp.tcpAlgorithmClass      						= "TCPReno"		# Only TCPReno has Sack Support
#**.*.tcp.sendQueueClass         						= "TCPMsgBasedSendQueue"
#**.*.tcp.receiveQueueClass      						= "TCPMsgBasedRcvQueue"
**.*.tcp.sackSupport            						= false
**.*.tcp.timestampSupport       						= true
**.*.tcp.windowScalingSupport   						= true
**.*.tcp.delayedAcksEnabled     						= true
**.*.tcp.limitedTransmitEnabled 						= true
**.*.tcp.increasedIWEnabled     						= false
**.*.tcp.nagleEnabled									= true

# MPTCP Client
#################################
**.mptcp1*.tcp.multipath 								= false	
**.mptcp1*.tcp.multipath_DSSSeqNo8   					= false
**.mptcp1*.tcp.multipath_DSSDataACK8 					= false
**.mptcp1*.tcp.multipath_ordered 						= true # only for test 
**.mptcp1*.tcp.multipath_Scheduler 						= "MPTCP_RoundRobinScheduler"
#**.mptcp1*.tcp.multipath_receiveQueueClass 				= "TCPMultipathMsgBasedRcvQueue"

# MPTCP Server
#################################
**.server1*.tcp.multipath 								= false	
**.server1*.tcp.multipath_DSSSeqNo8   					= false
**.server1*.tcp.multipath_DSSDataACK8 					= false
**.server1*.tcp.multipath_ordered 						= true # only for test 
**.server1*.tcp.multipath_Scheduler 					= "MPTCP_RoundRobinScheduler"
#**.server1*.tcp.multipath_receiveQueueClass 			= "TCPMultipathMsgBasedRcvQueue"

## IP Parameters
################################# 
**.*.ip.procDelay         								= 10us
**.*.routing.procDelay   			 					= 0.2us
**.*.inputQueue.procDelay 								= 0.1us

## SCTP Parameter
#################################
**.*.sctp.arwnd 										= 5e+05
**.*.sctp.sendQueueLimit								= 2500000 		
**.*.sctp.cmtSendAllVariant 							= "smallestLastTransmission"
**.*.sctp.cmtRetransmissionVariant 						= "normal"
**.*.sctp.cmtBufferSplitVariant 						= "bothSides"
**.*.sctp.cmtBufferSplittingUsesOSB 					= true
**.*.sctp.cmtCUCVariant 								= "pseudoCumAckV2"
**.*.sctp.cmtUseSFR 									= true
**.*.sctp.cmtUseDAC 									= true
**.*.sctp.cmtUseFRC 									= true
**.*.sctp.cmtCCVariant 									= "cmt"
**.*.sctp.cmtCCPathGroups 								= ""
**.*.sctp.cmtSackPath 									= "smallestSRTT"
**.*.sctp.nrSack 										= true
**.*.sctp.disableReneging 								= false
**.*.sctp.gapReportLimit 								= 1e+08
**.*.sctp.gapListOptimizationVariant 					= "none"
**.*.sctp.smartOverfullSACKHandling 					= true
**.*.sctp.cmtUseOOPG 									= false
**.*.sctp.strictCwndBooking 							= false
**.*.sctp.osbWithHeader 								= false
**.*.sctp.sackNow 										= true
**.*.sctp.packetDrop 									= false
**.*.sctp.highSpeedCC 									= false
**.*.sctp.maxBurst 										= 4
**.*.sctp.maxBurstVariant 								= "maxBurst"
**.*.sctp.initialWindow 								= 0
**.*.sctp.cmtSmartT3Reset 								= true
**.*.sctp.cmtSmartReneging 								= true
**.*.sctp.cmtSmartFastRTX 								= true
**.*.sctp.cmtSlowPathRTTUpdate 							= true
**.*.sctp.cmtSendBufferControlVariant 					= "none"
**.*.sctp.cmtSendBufferBlockThreshold 					= 0.5
**.*.sctp.cmtSuspendPathOnBlocking						= false
**.*.sctp.cmtMovedChunksReduceCwnd 						= true
**.*.sctp.movedChunkFastRTXFactor 						= 2
**.*.sctp.streamsToPaths 								= ""
**.*.sctp.RTXMethod 									= 0 # "once"
**.*.sctp.ssModule 										= 0 # "roundRobin"
**.*.sctp.allowQoSTracking 								= false
**.*.sctp.qosTrackingInterval 							= 1 s


[General]
network = bottleneck
total-stack = 36MiB
tkenv-plugin-path = ../../../etc/plugins


###########################################################################################
## Config simulation
rng-class           = cMersenneTwister
seed-0-mt           = 2
# repeat 			= 10		# Repeat runs

output-scalar-file  = scalars.sca
output-vector-file  = vectors.vec

sim-time-limit      = 0s 3600s 1ms
simtime-scale       = -8   # 10ns time scale

cmdenv-express-mode = true     # *** Enable debugging messages here! ***
**.testing          = false    # *** Enable debugging messages here! ***
**.checkQueues      = true     # *** Enable checkOutstandingBytes() calls here! ***

MPTCPTestNetwork.**.vector-recording = true
MPTCPTestNetwork.**.vector-recording-intervals = 0..100 



###########################################################################################
## DEBUG Output 

# Omnet board tools
#debug-on-errors = true
#record-eventlog = true

## Example for basic PCAP step by step configuration
#**.mptcp*.tcpdump.dumpFile="mptcp_Log.pcap"
#**.server1*.tcpdump.dumpFile="server1_Log.pcap"

## Example for general PCAP configuration
## Example for general PCAP configuration (new)
# activate pcap
**.mptcp1.numPcapRecorders = 1
**.server1.numPcapRecorders = 1
**.server2.numPcapRecorders = 1
**.default1*.numPcapRecorders = 1
# write out pcap
**.mptcp*.pcapRecorder[0].pcapFile  = ${N1=fullPath()}+".pcap"   # *** Enable pcap dump here! ***
**.server1*.pcapRecorder[0].pcapFile  = ${N2=fullPath()}+".pcap"   # *** Enable pcap dump here! ***
**.default1*.pcapRecorder[0].pcapFile  = ${N3=fullPath()}+".pcap"   # *** Enable pcap dump here! ***
**.server2*.pcapRecorder[0].pcapFile  = ${N4=fullPath()}+".pcap"   # *** Enable pcap dump here! ***

