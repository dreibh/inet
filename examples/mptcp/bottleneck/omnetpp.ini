## For Config have a look here
## http://www.omnetpp.org/listarchive/msg09348.php

[Config Default_Netperfmeter]
description = "MPTCP Default with Netperfmeter"
## Nothing special, just one server and one Client

########################################################
## Common network settings

## SET MTU of PPP
**.*.ppp[*].ppp.mtu = 1500
########################################################
## Topology Settings

## Router
# **.server*.ppp[0].ppp.mtu             = 1500	# individual configuration

## Router Queues

## RED Queue
**.router*.ppp[*].queueType           = "REDQueue"
**.router*.ppp[*].queue.wq            = 0.002
**.router*.ppp[*].queue.minth         = 30 # 30
**.router*.ppp[*].queue.maxth         = 90
**.router*.ppp[*].queue.maxp          = 0.1
**.router*.ppp[*].queue.frameCapacity = 100
**.router*.ppp[*].queue.pkrate        = 833.333

## FIFI QUEUE
#**.ppp[*].queueType = "DropTailQueue" # in routers
#**.ppp[*].queue.frameCapacity = 100000000    # in routers



## Server
## NetPerfMeter Passive Node
**.server*.netPerfMeter[*].activeMode        = false
**.server*.netPerfMeter[*].connectTime       = 0.001 s
**.server*.netPerfMeter[*].startTime         = uniform(0.9s,1.1s)
**.server*.netPerfMeter[*].resetTime         = 19 s # 19 s
**.server*.netPerfMeter[*].stopTime          = 70 s
**.server*.netPerfMeter[*].queueSize         = 5e+06 B # Think on arcwnd -> see TCP
#**.server*.netPerfMeter[*].unordered         = 1
#**.server*.netPerfMeter[*].unreliable        = 0
#**.server*.netPerfMeter[*].maxInboundStreams = 16
**.server*.netPerfMeter[*].frameRate         = 0 Hz
**.server*.netPerfMeter[*].frameSize         = 0 B
**.server*.netPerfMeter[*].frameRateString   = ""
**.server*.netPerfMeter[*].frameSizeString   = ""
**.server*.netPerfMeter[*].maxMsgSize        = 1436 B

## Client
## NetPerfMeter Active Node
**.client*.netPerfMeter[*].activeMode      = true
**.client*.netPerfMeter[*].connectTime     = 0.001 s
**.client*.netPerfMeter[*].startTime       = uniform(0.9s,1.1s)
**.client*.netPerfMeter[*].resetTime       = 10 s	# 19 s => Window Up 
**.client*.netPerfMeter[*].stopTime        = 60 s
**.client*.netPerfMeter[*].queueSize       = 2000000 B  # 5e+06 B (5000000b) | 250000 B
#**.client*.netPerfMeter[*].unordered       = 1
#**.client*.netPerfMeter[*].unreliable      = 0
#**.client*.netPerfMeter[*].outboundStreams = 1
#**.client*.netPerfMeter[*].maxMsgSize      = 1452 B
**.client*.netPerfMeter[*].maxMsgSize      = 1436 B ## 20 bytes less MSS
**.client*.netPerfMeter[*].frameRate       = 0 Hz
#**.client*.netPerfMeter[*].frameSize       = 1452 B
**.client*.netPerfMeter[*].frameSize       = 1436 B ## 20 bytes less MSS
**.client*.netPerfMeter[*].frameRateString = ""
**.client*.netPerfMeter[*].frameSizeString = ""
**.client*.netPerfMeter[*].onTime          = -1s
**.client*.netPerfMeter[*].offTime         = -1s
**.client*.netPerfMeter[*].maxReconnects   = 0

## Connections
**.client*.numNetPerfMeters              = 1
**.client*.netPerfMeter[*].remotePort    = 8000
**.client*.netPerfMeter[*].localAddress  = "10.1.1.1"
**.client1.netPerfMeter[*].remoteAddress = "10.1.2.2"
#**.client*.netPerfMeter[*].primaryPath   = "MPTCPTestNetwork.serverMain[" + string(${alphaMainClientID}) + "]/ppp0"
**.client*.netPerfMeter[*].protocol      = "TCP"


**.server*.netPerfMeter[*].localPort     = 8000+${alphaMainServerNetPerfMeterID=ancestorIndex(0)}
**.server*.netPerfMeter[*].localAddress  = "0.0.0.0"
**.server*.numNetPerfMeters              = 1
**.server*.netPerfMeter[*].protocol      = "TCP"

## Protocols
# SCTP Parameters
#MPTCPTestNetwork.*.sctp.arwnd                 = 5e+06
#MPTCPTestNetwork.*.sctp.hbInterval            = 30 s
#MPTCPTestNetwork.*.sctp.enableHeartbeats      = true

## TCP Parameters
**.*.tcp.advertisedWindow       = 5e+06
**.*.tcp.mss                    = 1456 # 1456	# Alternative 1452
**.*.tcp.tcpAlgorithmClass      = "TCPReno"		# Only TCPReno has Sack Support
**.*.tcp.sendQueueClass         = "TCPMsgBasedSendQueue"
**.*.tcp.receiveQueueClass      = "TCPMsgBasedRcvQueue"
**.*.tcp.sackSupport            = true
**.*.tcp.timestampSupport       = true
**.*.tcp.windowScalingSupport   = true
**.*.tcp.delayedAcksEnabled     = true
**.*.tcp.limitedTransmitEnabled = true
**.*.tcp.increasedIWEnabled     = false
**.*.tcp.nagleEnabled			= true
## General Config TCP Einstellungen
**.*.tcp.multipath = true	# true false
**.*.tcp.multipath_DSSSeqNo8   = true
**.*.tcp.multipath_DSSDataACK8 = true
**.*.tcp.multipath_ordered = false # only for test -> false switch of ordering for multipath
**.*.tcp.multipath_Scheduler = "MPTCP_RoundRobinScheduler"

## IP Parameters 
**.*.ip.procDelay         = 10us
**.*.routing.procDelay    = 0.2us
**.*.inputQueue.procDelay = 0.1us

[Config Default_Netperfmeter_2]
extends = Default_Netperfmeter

[General]
network = bottleneck
total-stack = 36MiB
tkenv-plugin-path = ../../../etc/plugins


###########################################################################################
## Config simulation
rng-class           = cMersenneTwister
seed-0-mt           = 2
# repeat 			= 10		# Repeat runs

output-scalar-file  = scalars.sca
output-vector-file  = vectors.vec

sim-time-limit      = 0s 3600s 1ms
simtime-scale       = -8   # 10ns time scale

cmdenv-express-mode = true     # *** Enable debugging messages here! ***
**.testing          = false    # *** Enable debugging messages here! ***
**.checkQueues      = true    # *** Enable checkOutstandingBytes() calls here! ***

MPTCPTestNetwork.**.vector-recording           = false
MPTCPTestNetwork.**.vector-recording-intervals = 0..100 



###########################################################################################
## DEBUG Output 

# Omnet board tools
#debug-on-errors = true
#record-eventlog = true

## Example for basic PCAP step by step configuration
#**.client*.tcpdump.dumpFile="Client_Log.pcap"
#**.server*.tcpdump.dumpFile="Server_Log.pcap"

## Example for general PCAP configuration
**.client*.tcpdump.dumpFile  = ${N1=fullPath()}+".pcap"   # *** Enable pcap dump here! ***
**.server*.tcpdump.dumpFile  = ${N2=fullPath()}+".pcap"   # *** Enable pcap dump here! ***



















## tcp apps
#**.numTcpApps = 1
#**.client*.tcpAppType = "TCPSessionApp"
#**.client*.tcpApp[0].active = true
#**.client*.tcpApp[0].address = "10.1.1.1"
#**.client*.tcpApp[0].address = "0.0.0.0"
#**.client*.tcpApp[0].port = -1
#**.client*.tcpApp[0].connectAddress = "server"
#**.client*.tcpApp[0].connectPort = 1000
#**.client*.tcpApp[0].tOpen = 0.2s
#**.client*.tcpApp[0].tSend = 0.4s
#**.client*.tcpApp[0].sendBytes = 1000B
#**.client*.tcpApp[0].sendScript = ""
#**.client*.tcpApp[0].tClose = 100s


## tcp apps
#**.numTcpApps = 1
#**.client*.tcpAppType = "TCPBasicClientApp"
#**.client*.tcpApp[0].active = true
##**.client*.tcpApp[0].address = "10.0.0.1"
##**.client*.tcpApp[0].address = "192.168.1.1"
#**.client*.tcpApp[0].port = -1
#**.client*.tcpApp[0].connectAddress = "server"
#**.client*.tcpApp[0].connectPort = 1000
#**.client*.tcpApp[0].tOpen = 0.2s
#**.client*.tcpApp[0].tSend = 0.4s
#**.client*.tcpApp[0].sendBytes = 1000000B
#**.client*.tcpApp[0].idleInterval = 3s
#**.client*.tcpApp[0].thinkTime = 0s


#**.server*.tcpAppType="TCPSinkApp"
#**.server*.tcpAppType = "TCPEchoApp"
#**.server*.tcpApp[0].address = "10.1.2.2"
#**.server*.tcpApp[0].address = "192.168.1.2"
#**.server*.tcpApp[0].port = 1000


## Not Usable Parameter
## **.server*.tcpApp[0].echoFactor = 2.0
## **.server*.tcpApp[0].echoDelay = 0

# NIC configuration
#**.ppp[*].queueType = "DropTailQueue" # in routers
#**.ppp[*].queue.frameCapacity = 100  # in routers

#*.configurator.networkAddress = "10.0.0.0"
#*.configurator.networkAddress = "192.168.1.0"


