[General]
network 												= bottleneck
total-stack 											= 36MiB
tkenv-plugin-path 										= ../../../etc/plugins

rng-class           									= cMersenneTwister
repeat 													= 1								# Repeat runs

output-scalar-file  									= scalars/scalars.sca
output-vector-file  									= vectors/vectors.vec

sim-time-limit      									= 0s 3600s 1ms
simtime-scale       									= -8   							# 10ns time scale

cmdenv-express-mode 									= true     						# *** Enable debugging messages here! ***
**.testing          									= false    						# *** Enable debugging messages here! ***
**.checkQueues      									= false     					# *** Enable checkOutstandingBytes() calls here! ***

**.*.vector-recording 									= true
**.*.vector-recording-intervals 						= 0..900 

debug-on-errors = false
record-eventlog = false

#############################################################################################
[Config Default_Settings]																	#
description = "Default Settings"															#
#############################################################################################


## Common network settings
#############################################################################################
## MTU
**.*.ppp[*].ppp.mtu = 1500 B

## Router Queues
**.router*.ppp[*].queueType 							= "DropTailQueue" 				# FIFO Queue
**.router*.ppp[*].queue.frameCapacity 					= 100    						# 100-packet-buffer


## NetPerfMeterApp
#############################################################################################
## default1 
**.default1.netPerfMeterApp[*].activeMode      			= true
**.default1.netPerfMeterApp[*].connectTime    		 	= 0.001 s
**.default1.netPerfMeterApp[*].startTime       			= uniform(0.9s,1.1s)
**.default1.netPerfMeterApp[*].resetTime      			= 19 s
**.default1.netPerfMeterApp[*].stopTime       			= 300 s
**.default1.netPerfMeterApp[*].queueSize       			= 5e+06 B  
**.default1.netPerfMeterApp[*].maxMsgSize      			= 1424 B 						# Be careful 1456 - 32 (options = 32)
**.default1.netPerfMeterApp[*].frameRate      			= 0 Hz
**.default1.netPerfMeterApp[*].frameSize       			= 1424 B 						# Be careful 1456 - 32 (options = 32)
**.default1.netPerfMeterApp[*].frameRateString 			= ""
**.default1.netPerfMeterApp[*].frameSizeString 			= ""
**.default1.netPerfMeterApp[*].onTime          			= -1s
**.default1.netPerfMeterApp[*].offTime         			= -1s
**.default1.netPerfMeterApp[*].maxReconnects  	 		= 0

## mptcp1
**.mptcp1.netPerfMeterApp[*].activeMode      			= true
**.mptcp1.netPerfMeterApp[*].connectTime     			= 0.001 s
**.mptcp1.netPerfMeterApp[*].startTime       			= uniform(0.9s,1.1s)
**.mptcp1.netPerfMeterApp[*].resetTime       			= 19 s
**.mptcp1.netPerfMeterApp[*].stopTime        			= 300 s
**.mptcp1.netPerfMeterApp[*].queueSize      	 		= 5e+06 B
**.mptcp1.netPerfMeterApp[*].maxMsgSize      			= 1424 B 					
**.mptcp1.netPerfMeterApp[*].frameRate       			= 0 Hz
**.mptcp1.netPerfMeterApp[*].frameSize       			= 1424 B					
**.mptcp1.netPerfMeterApp[*].frameRateString			= ""
**.mptcp1.netPerfMeterApp[*].frameSizeString			= ""
**.mptcp1.netPerfMeterApp[*].onTime         			= -1s
**.mptcp1.netPerfMeterApp[*].offTime        			= -1s
**.mptcp1.netPerfMeterApp[*].maxReconnects  			= 0 

## server1
**.server*.netPerfMeterApp[*].activeMode        		= false
**.server*.netPerfMeterApp[*].connectTime      			= 0.001 s
**.server*.netPerfMeterApp[*].startTime         		= 0.1 s
**.server*.netPerfMeterApp[*].resetTime         		= 19 s
**.server*.netPerfMeterApp[*].stopTime          		= 340 s
**.server*.netPerfMeterApp[*].queueSize         		= 5e+06 B
**.server*.netPerfMeterApp[*].maxMsgSize        		= 1424 B					
**.server*.netPerfMeterApp[*].frameRate         		= 0 Hz
**.server*.netPerfMeterApp[*].frameSize         		= 1424 B					
**.server*.netPerfMeterApp[*].frameRateString  	 		= ""
**.server*.netPerfMeterApp[*].frameSizeString   		= ""


## Common connection setup
#############################################################################################
## default1
**.default1.netPerfMeterApp[*].remotePort    			= 8000
**.default1.netPerfMeterApp[*].localAddress  			= "10.100.0.1"
**.default1.netPerfMeterApp[*].remoteAddress 			= "10.200.0.2"
**.default1.netPerfMeterApp[*].protocol      			= "TCP"

## mptcp1
**.mptcp1.netPerfMeterApp[*].remotePort   	 			= 8000
**.mptcp1.netPerfMeterApp[*].localAddress  				= "10.1.1.1"
**.mptcp1.netPerfMeterApp[*].remoteAddress 				= "10.1.2.2"
**.mptcp1.netPerfMeterApp[*].protocol      				= "TCP"

## server1
**.server1.netPerfMeterApp[*].localPort     			= 8000+${server1ID=ancestorIndex(0)}
**.server1.netPerfMeterApp[*].localAddress 	 			= "0.0.0.0"
**.server1.netPerfMeterApp[*].protocol      			= "TCP"

## server2
**.server2.netPerfMeterApp[*].localPort     			= 8000+${server2ID=ancestorIndex(0)}
**.server2.netPerfMeterApp[*].localAddress  			= "0.0.0.0"
**.server2.netPerfMeterApp[*].protocol      			= "TCP"

## Protocols
#############################################################################################
## IP Parameters
**.*.ip.procDelay         								= 10us
**.*.routing.procDelay   			 					= 0.2us
**.*.inputQueue.procDelay 								= 0.1us

## TCP Parameters
**.*.tcp.advertisedWindow       						= 5e+06
**.*.tcp.mss                    						= 1456
**.*.tcp.tcpAlgorithmClass      						= "TCPNewReno"					# Only TCPReno has Sack Support
**.*.tcp.sackSupport            						= false							# SACK Algorithm
**.*.tcp.timestampSupport       						= true							# Timestamp Option
**.*.tcp.windowScalingSupport   						= true							# Window Scaling Option
**.*.tcp.delayedAcksEnabled     						= false							# Delay ACK, default (false)
**.*.tcp.limitedTransmitEnabled 						= true							# Limited Transmitt RFC 3042, default (true)
**.*.tcp.increasedIWEnabled     						= false							# Increase IWND RFC 3390, default (false) 
**.*.tcp.nagleEnabled								    = true							# Nagle Algorithm RFC 896, default (true)
**.*.tcp.recordStats								    = true							# recording of seqNum into output vectors, default (true)

## MPTCP Parameters
## default1
**.default1.tcp.multipath_DSSSeqNo8   					= false							# switch sending DSS SQN with 8 or 4 octets, default (false)
**.default1.tcp.multipath_DSSDataACK8 					= false							# switch sending DSS ACK with 8 or 4 octets, default (false)
**.default1.tcp.multipath_ordered 						= true 							# ordered multipath transmission, default (true)
**.default1.tcp.multipath_Scheduler 					= "MPTCP_RoundRobinScheduler"	# Packet Scheduling, defaul("MPTCP_RoundRobinScheduler")

## mptcp1
**.mptcp1.tcp.multipath_DSSSeqNo8   					= false						
**.mptcp1.tcp.multipath_DSSDataACK8 					= false						
**.mptcp1.tcp.multipath_ordered 						= true 						 
**.mptcp1.tcp.multipath_Scheduler 						= "MPTCP_RoundRobinScheduler"

## server1
**.server1.tcp.multipath_DSSSeqNo8   					= false						
**.server1.tcp.multipath_DSSDataACK8 					= false						
**.server1.tcp.multipath_ordered 					    = true 						 
**.server1.tcp.multipath_Scheduler 					    = "MPTCP_RoundRobinScheduler"

## server2
**.server2.tcp.multipath_DSSSeqNo8   					= false
**.server2.tcp.multipath_DSSDataACK8 					= false
**.server2.tcp.multipath_ordered 						= true 
**.server2.tcp.multipath_Scheduler 						= "MPTCP_RoundRobinScheduler"

## For Config have a look here
## http://www.omnetpp.org/listarchive/msg09348.php
**.*.tcpType = "TCP"
**.*.udpType = "UDP"
**.*.sctpType = "SCTP"

[Config Experiment_Bottleneck_MPTCP_TCP]
#############################################################################################
extends = Default_Settings																	#
description = "Setup with Bottleneck TCP"													#
#############################################################################################
## NetPerfMeterApp
**.mptcp1.netPerfMeterApp[*].startTime       			= uniform(4.9s,5.1s)
**.mptcp1.netPerfMeterApp[*].resetTime       			= 60 s
**.mptcp1.netPerfMeterApp[*].stopTime        			= 60 s
**.server*.netPerfMeterApp[*].connectTime      			= 0.001 s
**.server*.netPerfMeterApp[*].startTime  		       	= uniform(0.9s,1.1s)
**.server*.netPerfMeterApp[*].resetTime         		= 60 s
**.server*.netPerfMeterApp[*].stopTime          		= 60 s
**.default1*.netPerfMeterApp[*].startTime       		= uniform(0.9s,1.1s)
**.default1*.netPerfMeterApp[*].resetTime      			= 60 s
**.default1*.netPerfMeterApp[*].stopTime       			= 60 s

**.default1.numNetPerfMeterApps              			= 1
**.mptcp1.numNetPerfMeterApps              				= 1
**.server1.numNetPerfMeterApps              			= 1
**.server2.numNetPerfMeterApps             				= 1

## Congestion Control
**.*.netPerfMeterApp[*].protocol      					= "TCP"
**.default1.*.cmtCCVariant 								= "off"
**.server2.*.cmtCCVariant								= "off"
**.mptcp1.*.cmtCCVariant 								= "mptcp-like"
**.server1.*.cmtCCVariant 								= "mptcp-like"

## TCP Parameters
**.*.tcp.increasedIWEnabled     						= false # true