# * $Id: omnetpp.ini,v 1.14 2009-03-27 03:46:37 dreibh Exp $
# * --------------------------------------------------------------------------
# *
# *     //====//  //===== <===//===>  //====//
# *    //        //          //      //    //    SCTP Optimization Project
# *   //=====   //          //      //====//   ==============================
# *        //  //          //      //           University of Duisburg-Essen
# *  =====//  //=====     //      //
# *
# * --------------------------------------------------------------------------
# *
# *   Copyright (C) 2009-2012 by Thomas Dreibholz
# *
# *   This program is free software: you can redistribute it and/or modify
# *   it under the terms of the GNU General Public License as published by
# *   the Free Software Foundation, either version 3 of the License, or
# *   (at your option) any later version.
# *
# *   This program is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
# *
# *   Contact: dreibh@iem.uni-due.de

#############################################################################
#### GENERAL CONFIGURATION                                               ####
#############################################################################

[General]
network             = cmttest4
rng-class           = cMersenneTwister
seed-0-mt           = 3

# NOTE: To turn on printing of SCTP debugging messages, set:
#       cmdenv-express-mode=false, **.testing=true
cmdenv-express-mode = true    # Express mode
**.testing          = false   # Verbose SCTP messages
**.testTimeout      = 0

output-scalar-file  = scalars.sca
output-vector-file  = vectors.vec

cmttest4.**.vector-recording = no
cmttest4.**.vector-recording-intervals = 0s..0s 3600s


# ===== General Scenario Settings ======================
cmttest4.cores                  = 3
cmttest4.core[0].downlinkTrails = 2
cmttest4.core[1].uplinkTrails   = 2
cmttest4.core[1].downlinkTrails = 1
cmttest4.core[2].uplinkTrails   = 1
# ---- Alpha ----------------------------------------------
cmttest4.core[0].systemsMain                          = 2
cmttest4.core[0].systemsReference                     = 0
cmttest4.core[0].clientReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[0].serverReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[0].disjointTrails                       = 2
cmttest4.core[0].bottleneckTrails                     = 0
# ---- Beta -----------------------------------------------
cmttest4.core[1].systemsMain                          = 0
cmttest4.core[1].systemsReference                     = 0
cmttest4.core[1].clientReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[1].serverReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[1].disjointTrails                       = 1
cmttest4.core[1].bottleneckTrails                     = 0
# ---- Gamma ----------------------------------------------
cmttest4.core[2].systemsMain                          = 0
cmttest4.core[2].systemsReference                     = 0
cmttest4.core[2].clientReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[2].serverReference[*].sctp.cmtCCVariant = "off"
cmttest4.core[2].disjointTrails                       = 1
cmttest4.core[2].bottleneckTrails                     = 0

# ===== Network QoS Settings ===========================
# ----- Trails -----------------------------------------
cmttest4.core[*].westernCoreRouter[*].ppp[0].ppp.mtu             = 1500   # NOTE: mtu := max(commonMTU, coreMTU)
cmttest4.core[*].westernCoreRouter[*].ppp[0].queueType           = "REDQueue"
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.wq            = 0.002
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.minth         = 20
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.maxth         = 80
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.maxp          = 0.02
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.frameCapacity = 100
cmttest4.core[*].westernCoreRouter[*].ppp[0].queue.pkrate        = 833.33333
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.datarate = 10 Mbps
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.per      = 0
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.ber      = 0
cmttest4.core[*].easternCoreRouter[*].ppp[0].ppp.mtu             = 1500   # NOTE: mtu := max(commonMTU, coreMTU)
cmttest4.core[*].easternCoreRouter[*].ppp[0].queueType           = "REDQueue"
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.wq            = 0.002
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.minth         = 20
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.maxth         = 80
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.maxp          = 0.02
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.frameCapacity = 100
cmttest4.core[*].easternCoreRouter[*].ppp[0].queue.pkrate        = 833.33333
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.datarate = 10 Mbps
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.per      = 0
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.ber      = 0
cmttest4.core[*].client*[*].ppp[0].ppp.mtu                       = 1500   # Core
cmttest4.core[*].server*[*].ppp[0].ppp.mtu                       = 1500   # Core
cmttest4.core[*].client*[*].ppp[1].ppp.mtu                       = 1500   # Core
cmttest4.core[*].server*[*].ppp[1].ppp.mtu                       = 1500   # Core

# ===== Background Traffic ===============================
# ----- Western Nodes-------------------------------------
cmttest4.core[*].westernCoreRouter[*].numNetPerfMeters              = 1
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].activeMode    = true
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].protocol      = "UDP"
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].frameRate     = 0
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].frameSize     = 0
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].maxMsgSize    = 1472 B
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].unordered     = 0.0
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].unreliable    = 0.0
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].remoteAddress = "cmttest4.core[*].easternCoreRouter[" + string(${WesternCoreRouterID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].localPort     = 20000+${WesternCoreRouterClientID=ancestorIndex(0)}
cmttest4.core[*].westernCoreRouter[*].netPerfMeter[*].remotePort    = 8000+${WesternCoreRouterClientID}
# ----- Eastern Nodes-------------------------------------
cmttest4.core[*].easternCoreRouter[*].numNetPerfMeters              = 1
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].activeMode    = false
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].protocol      = "UDP"
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].frameRate     = 0
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].frameSize     = 0
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].maxMsgSize    = 1472 B
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].unordered     = 0.0
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].unreliable    = 0.0
cmttest4.core[*].easternCoreRouter[*].netPerfMeter[*].localPort     = 8000+${EasternCoreRouterServerID=ancestorIndex(0)}

# ----- Common Settings --------------------------------
cmttest4.core[*].*[*].ppp[*].ppp.mtu = 1500

# ===== Application Parameters ===========================
# ----- NetPerfMeter Active Node--------------------------
cmttest4.core[*].client*[*].netPerfMeter[*].activeMode      = true
cmttest4.core[*].client*[*].netPerfMeter[*].connectTime     = 0.001 s
cmttest4.core[*].client*[*].netPerfMeter[*].startTime       = uniform(0.9s,1.1s)
cmttest4.core[*].client*[*].netPerfMeter[*].resetTime       = 19 s
cmttest4.core[*].client*[*].netPerfMeter[*].stopTime        = 60 s
cmttest4.core[*].client*[*].netPerfMeter[*].queueSize       = 1e+06 B
cmttest4.core[*].client*[*].netPerfMeter[*].unordered       = 1
cmttest4.core[*].client*[*].netPerfMeter[*].unreliable      = 0
cmttest4.core[*].client*[*].netPerfMeter[*].outboundStreams = 1
cmttest4.core[*].client*[*].netPerfMeter[*].decoupleSaturatedStreams = false
cmttest4.core[*].client*[*].netPerfMeter[*].maxMsgSize      = 1452 B
cmttest4.core[*].client*[*].netPerfMeter[*].frameRate       = 0 Hz
cmttest4.core[*].client*[*].netPerfMeter[*].frameSize       = uniform(500B, 1452B)
cmttest4.core[*].client*[*].netPerfMeter[*].frameRateString = ""
cmttest4.core[*].client*[*].netPerfMeter[*].frameSizeString = ""
cmttest4.core[*].client*[*].netPerfMeter[*].onTime          = -1s
cmttest4.core[*].client*[*].netPerfMeter[*].offTime         = -1s
cmttest4.core[*].client*[*].netPerfMeter[*].maxReconnects   = 0
# cmttest4.core[*].client*[*].tcpdump.dumpFile                = ${N1=fullPath()}+".pcap"   # *** Enable pcap dump here! ***

# ----- NetPerfMeter Passive Node ------------------------
cmttest4.core[*].server*[*].netPerfMeter[*].activeMode        = false
cmttest4.core[*].server*[*].netPerfMeter[*].connectTime       = 0.001 s
cmttest4.core[*].server*[*].netPerfMeter[*].startTime         = uniform(0.9s,1.1s)
cmttest4.core[*].server*[*].netPerfMeter[*].resetTime         = 19 s
cmttest4.core[*].server*[*].netPerfMeter[*].stopTime          = 60 s
cmttest4.core[*].server*[*].netPerfMeter[*].queueSize         = 1e+06 B
cmttest4.core[*].server*[*].netPerfMeter[*].unordered         = 1
cmttest4.core[*].server*[*].netPerfMeter[*].unreliable        = 0
cmttest4.core[*].server*[*].netPerfMeter[*].maxInboundStreams = 16
cmttest4.core[*].server*[*].netPerfMeter[*].decoupleSaturatedStreams = false
cmttest4.core[*].server*[*].netPerfMeter[*].frameRate         = 0 Hz
cmttest4.core[*].server*[*].netPerfMeter[*].frameSize         = 0 B
cmttest4.core[*].server*[*].netPerfMeter[*].frameRateString   = ""
cmttest4.core[*].server*[*].netPerfMeter[*].frameSizeString   = ""
cmttest4.core[*].server*[*].netPerfMeter[*].maxMsgSize        = 1452 B
# cmttest4.core[*].server*[*].tcpdump.dumpFile                  = ${N2=fullPath()}+".pcap"   # *** Enable pcap dump here! ***

# ----- NetPerfMeter Connections -------------------------
cmttest4.core[0].clientReference[*].numNetPerfMeters     = 1
cmttest4.core[0].serverReference[*].numNetPerfMeters     = 1
cmttest4.core[0].clientMain[*].numNetPerfMeters          = 1
cmttest4.core[0].serverMain[*].numNetPerfMeters          = 1
cmttest4.core[1].clientReference[*].numNetPerfMeters     = 1
cmttest4.core[1].serverReference[*].numNetPerfMeters     = 1
cmttest4.core[1].clientMain[*].numNetPerfMeters          = 1
cmttest4.core[1].serverMain[*].numNetPerfMeters          = 1
cmttest4.core[2].clientReference[*].numNetPerfMeters     = 1
cmttest4.core[2].serverReference[*].numNetPerfMeters     = 1
cmttest4.core[2].clientMain[*].numNetPerfMeters          = 1
cmttest4.core[2].serverMain[*].numNetPerfMeters          = 1
cmttest4.core[0].clientReference[*].netPerfMeter[*].localPort     = 20000+${alphaReferenceClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[0].clientReference[*].netPerfMeter[*].remotePort    = 8000+${alphaReferenceClientNetPerfMeterID}
cmttest4.core[0].clientReference[*].netPerfMeter[*].remoteAddress = "cmttest4.core[0].serverReference[" + string(${alphaReferenceClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[0].clientReference[*].netPerfMeter[*].primaryPath   = "cmttest4.core[0].serverReference[" + string(${alphaReferenceClientID}) + "]/ppp0"
cmttest4.core[0].serverReference[*].netPerfMeter[*].localPort     = 8000+${alphaReferenceServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[0].clientReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[0].serverReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[0].clientMain[*].netPerfMeter[*].localPort     = 20000+${alphaMainClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[0].clientMain[*].netPerfMeter[*].remotePort    = 8000+${alphaMainClientNetPerfMeterID}
cmttest4.core[0].clientMain[*].netPerfMeter[*].remoteAddress = "cmttest4.core[0].serverMain[" + string(${alphaMainClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[0].clientMain[*].netPerfMeter[*].primaryPath   = "cmttest4.core[0].serverMain[" + string(${alphaMainClientID}) + "]/ppp0"
cmttest4.core[0].serverMain[*].netPerfMeter[*].localPort     = 8000+${alphaMainServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[0].clientMain[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[0].serverMain[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[1].clientReference[*].netPerfMeter[*].localPort     = 20000+${betaReferenceClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[1].clientReference[*].netPerfMeter[*].remotePort    = 8000+${betaReferenceClientNetPerfMeterID}
cmttest4.core[1].clientReference[*].netPerfMeter[*].remoteAddress = "cmttest4.core[1].serverReference[" + string(${betaReferenceClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[1].clientReference[*].netPerfMeter[*].primaryPath   = "cmttest4.core[1].serverReference[" + string(${betaReferenceClientID}) + "]/ppp0"
cmttest4.core[1].serverReference[*].netPerfMeter[*].localPort     = 8000+${betaReferenceServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[1].clientReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[1].serverReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[1].clientMain[*].netPerfMeter[*].localPort     = 20000+${betaMainClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[1].clientMain[*].netPerfMeter[*].remotePort    = 8000+${betaMainClientNetPerfMeterID}
cmttest4.core[1].clientMain[*].netPerfMeter[*].remoteAddress = "cmttest4.core[1].serverMain[" + string(${betaMainClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[1].clientMain[*].netPerfMeter[*].primaryPath   = "cmttest4.core[1].serverMain[" + string(${betaMainClientID}) + "]/ppp0"
cmttest4.core[1].serverMain[*].netPerfMeter[*].localPort     = 8000+${betaMainServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[1].clientMain[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[1].serverMain[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[2].clientReference[*].netPerfMeter[*].localPort     = 20000+${gammaReferenceClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[2].clientReference[*].netPerfMeter[*].remotePort    = 8000+${gammaReferenceClientNetPerfMeterID}
cmttest4.core[2].clientReference[*].netPerfMeter[*].remoteAddress = "cmttest4.core[2].serverReference[" + string(${gammaReferenceClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[2].clientReference[*].netPerfMeter[*].primaryPath   = "cmttest4.core[2].serverReference[" + string(${gammaReferenceClientID}) + "]/ppp0"
cmttest4.core[2].serverReference[*].netPerfMeter[*].localPort     = 8000+${gammaReferenceServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[2].clientReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[2].serverReference[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[2].clientMain[*].netPerfMeter[*].localPort     = 20000+${gammaMainClientNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[2].clientMain[*].netPerfMeter[*].remotePort    = 8000+${gammaMainClientNetPerfMeterID}
cmttest4.core[2].clientMain[*].netPerfMeter[*].remoteAddress = "cmttest4.core[2].serverMain[" + string(${gammaMainClientID=ancestorIndex(1)}) + "]/ppp0"
cmttest4.core[2].clientMain[*].netPerfMeter[*].primaryPath   = "cmttest4.core[2].serverMain[" + string(${gammaMainClientID}) + "]/ppp0"
cmttest4.core[2].serverMain[*].netPerfMeter[*].localPort     = 8000+${gammaMainServerNetPerfMeterID=ancestorIndex(0)}
cmttest4.core[2].clientMain[*].netPerfMeter[*].protocol      = "SCTP"
cmttest4.core[2].serverMain[*].netPerfMeter[*].protocol      = "SCTP"

# ===== SCTP Parameters ==================================
cmttest4.core[*].*[*].sctp.arwnd                       = 5e+05
cmttest4.core[*].*[*].sctp.cmtSendAllVariant           = "smallestLastTransmission"
cmttest4.core[*].*[*].sctp.cmtRetransmissionVariant    = "normal"
cmttest4.core[*].*[*].sctp.cmtBufferSplitVariant       = "bothSides"
cmttest4.core[*].*[*].sctp.cmtBufferSplittingUsesOSB   = true
cmttest4.core[*].*[*].sctp.cmtCUCVariant               = "pseudoCumAckV2"
cmttest4.core[*].*[*].sctp.cmtUseSFR                   = true
cmttest4.core[*].*[*].sctp.cmtUseDAC                   = true
cmttest4.core[*].*[*].sctp.cmtUseFRC                   = true
cmttest4.core[*].*[*].sctp.cmtCCVariant                = "cmt"
cmttest4.core[*].*[*].sctp.cmtCCPathGroups             = ""
cmttest4.core[*].*[*].sctp.cmtSackPath                 = "smallestSRTT"
cmttest4.core[*].*[*].sctp.nrSack                      = true
cmttest4.core[*].*[*].sctp.disableReneging             = false
cmttest4.core[*].*[*].sctp.gapReportLimit              = 1e+08
cmttest4.core[*].*[*].sctp.gapListOptimizationVariant  = "none"
cmttest4.core[*].*[*].sctp.smartOverfullSACKHandling   = true
cmttest4.core[*].*[*].sctp.cmtUseOOPG                  = false
cmttest4.core[*].*[*].sctp.strictCwndBooking           = false
cmttest4.core[*].*[*].sctp.osbWithHeader               = false
cmttest4.core[*].*[*].sctp.sackNow                     = true
cmttest4.core[*].*[*].sctp.packetDrop                  = false
cmttest4.core[*].*[*].sctp.highSpeedCC                 = false
cmttest4.core[*].*[*].sctp.maxBurst                    = 4
cmttest4.core[*].*[*].sctp.maxBurstVariant             = "maxBurst"
cmttest4.core[*].*[*].sctp.initialWindow               = 0
cmttest4.core[*].*[*].sctp.cmtSmartT3Reset             = true
cmttest4.core[*].*[*].sctp.cmtSmartReneging            = true
cmttest4.core[*].*[*].sctp.cmtSmartFastRTX             = true
cmttest4.core[*].*[*].sctp.cmtSlowPathRTTUpdate        = true
cmttest4.core[*].*[*].sctp.cmtSendBufferControlVariant = "none"
cmttest4.core[*].*[*].sctp.cmtSendBufferBlockThreshold = 0.5
cmttest4.core[*].*[*].sctp.cmtSuspendPathOnBlocking    = false
cmttest4.core[*].*[*].sctp.cmtMovedChunksReduceCwnd    = true
cmttest4.core[*].*[*].sctp.movedChunkFastRTXFactor     = 2
cmttest4.core[*].*[*].sctp.streamsToPaths              = ""
cmttest4.core[*].*[*].sctp.RTXMethod                   = 0   # "once"
cmttest4.core[*].*[*].sctp.ssModule                    = 0   # "roundRobin"
cmttest4.core[*].*[*].sctp.allowQoSTracking            = false
cmttest4.core[*].*[*].sctp.qosTrackingInterval         = 1 s

# ===== TCP Parameters ===================================
cmttest4.core[*].*[*].tcp.advertisedWindow       = 5e+05
cmttest4.core[*].*[*].tcp.mss                    = 1452
cmttest4.core[*].*[*].tcp.tcpAlgorithmClass      = "TCPReno"
cmttest4.core[*].*[*].tcp.sendQueueClass         = "TCPMsgBasedSendQueue"
cmttest4.core[*].*[*].tcp.receiveQueueClass      = "TCPMsgBasedRcvQueue"
cmttest4.core[*].*[*].tcp.sackSupport            = false
cmttest4.core[*].*[*].tcp.timestampSupport       = false
cmttest4.core[*].*[*].tcp.windowScalingSupport   = true
cmttest4.core[*].*[*].tcp.delayedAcksEnabled     = false
cmttest4.core[*].*[*].tcp.limitedTransmitEnabled = false
cmttest4.core[*].*[*].tcp.increasedIWEnabled     = false

# ===== IP Parameters ====================================
cmttest4.core[*].*[*].ip.procDelay         = 10us
cmttest4.core[*].*[*].routing.procDelay    = 0.2us
cmttest4.core[*].*[*].inputQueue.procDelay = 0.1us

# ===== Test Parameters ==================================
cmttest4.core[*].*[*].testValue0   = 0
cmttest4.core[*].*[*].testValue1   = 0
cmttest4.core[*].*[*].testValue2   = 0
cmttest4.core[*].*[*].testValue3   = 0
cmttest4.core[*].*[*].testValue4   = 0
cmttest4.core[*].*[*].testString0  = ""
cmttest4.core[*].*[*].testString1  = ""
cmttest4.core[*].*[*].testString2  = ""
cmttest4.core[*].*[*].testString3  = ""
cmttest4.core[*].*[*].testString4  = ""



#############################################################################
#### CONFIGURATION SETS                                                  ####
#############################################################################

[Config multiPathTransfer]
**.core[*].client*[*].tcpdump.dumpFile = "MultiPathTransfer-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "MultiPathTransfer-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 1
**.core[0].systemsMain            = 1
**.core[0].disjointTrails         = 2

**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
**.cmtUseSFR                      = true
**.cmtUseDAC                      = true
**.cmtUseFRC                      = true

cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms


[Config primaryViaNorthernTrail]
**.core[*].client*[*].tcpdump.dumpFile = "PrimaryViaNorthernTrail-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "PrimaryViaNorthernTrail-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 1
**.core[0].systemsMain            = 1
**.core[0].disjointTrails         = 2

**.cmtCCVariant                   = "off"   # Deactivate CMT
cmttest4.core[0].clientMain[0].netPerfMeter[0].primaryPath = "cmttest4.core[0].clientMain[0]/ppp0"

cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms


[Config primaryViaSouthernTrail]
**.core[*].client*[*].tcpdump.dumpFile = "PrimaryViaSouthernTrail-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "PrimaryViaSouthernTrail-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 1
**.core[0].systemsMain            = 1
**.core[0].disjointTrails         = 2

**.cmtCCVariant                   = "off"   # Deactivate CMT
cmttest4.core[0].clientMain[0].netPerfMeter[0].primaryPath = "cmttest4.core[0].clientMain[0]/ppp1"

cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms


[Config fairnessCMT]
**.core[*].client*[*].tcpdump.dumpFile = "FairnessCMT-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "FairnessCMT-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 1
**.core[0].systemsMain            = 1
**.core[0].systemsReference       = 1
**.core[0].disjointTrails         = 2

**.core[*].clientReference[*].sctp.cmtCCVariant = "off"

**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
**.cmtUseSFR                      = true
**.cmtUseDAC                      = true
**.cmtUseFRC                      = true

cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[*].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms


[Config queueBlocking]
**.core[*].client*[*].tcpdump.dumpFile = "QueueBlocking-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "QueueBlocking-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 2
**.core[0].disjointTrails         = 1
**.core[0].downlinkTrails         = 1
**.core[1].disjointTrails         = 1
**.core[1].uplinkTrails           = 1
**.core[0].systemsMain            = 0
**.core[1].systemsMain            = 1

**.core[*].client*[*].netPerfMeter[*].unordered = 1.0   # !!! Unordered Delivery
**.core[*].client*[*].netPerfMeter[*].queueSize = 50000 B
**.core[*].server*[*].sctp.arwnd                = 50000

**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
**.cmtUseSFR                      = true
**.cmtUseDAC                      = true
**.cmtUseFRC                      = true

**.sackNow                        = true
**.packetDrop                     = true
**.highSpeedCC                    = false
**.checkSackSeqNumber             = false
**.checkQueues                    = false         # !!! Do not call checkOutstandingBytes() -> significant speed-up!

**.nrSack                         = true          # !!!
**.cmtSmartT3Reset                = true          # !!!
**.cmtSmartFastRTX                = true          # !!!
**.cmtSmartReneging               = true          # !!!
**.cmtSlowPathRTTUpdate           = true          # !!!

**.cmtBufferSplitVariant          = "bothSides"   # !!!
**.cmtBufferSplittingUsesOSB      = true          # !!!

**.cmtSendBufferControlVariant    = "none"        # !!!
**.cmtSendBufferBlockThreshold    = 0.5
**.cmtSuspendPathOnBlocking       = false
**.cmtMovedChunksReduceCwnd       = true          # !!!!!!
#**.maxBurstVariant = "congestionWindowLimiting"
#**.maxBurstVariant = "aggressiveMaxBurst"
#**.maxBurstVariant = "maxBurst"
**.maxBurstVariant = "useItOrLoseIt"
**.maxBurst = 4

cmttest4.core[0].westernCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[0].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[0].easternCoreRouter[*].pppg$o[0].channel.datarate = 1 Mbps
cmttest4.core[0].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms

cmttest4.core[1].westernCoreRouter[*].pppg$o[0].channel.datarate = 0.3 Mbps
cmttest4.core[1].westernCoreRouter[*].pppg$o[0].channel.delay    = 10 ms
cmttest4.core[1].easternCoreRouter[*].pppg$o[0].channel.datarate = 0.3 Mbps
cmttest4.core[1].easternCoreRouter[*].pppg$o[0].channel.delay    = 10 ms


[Config multiStreamTransfer]
**.core[*].client*[*].tcpdump.dumpFile = "QueueBlocking-" + ${N1=fullPath()} + ".pcap"
**.core[*].server*[*].tcpdump.dumpFile = "QueueBlocking-" + ${N2=fullPath()} + ".pcap"
**.cores                          = 2
**.core[0].disjointTrails         = 1
**.core[0].downlinkTrails         = 1
**.core[1].disjointTrails         = 1
**.core[1].uplinkTrails           = 1
**.core[0].systemsMain            = 0
**.core[1].systemsMain            = 1

**.core[*].client*[*].sctp.streamsToPaths               = "0 1"   # !!!
**.core[*].client*[*].netPerfMeter[*].outboundStreams   = 2       # !!!
**.core[*].server*[*].netPerfMeter[*].maxInboundStreams = 2       # !!!

**.core[*].client*[*].netPerfMeter[*].unordered = 1.0     # !!! Unordered Delivery
**.core[*].client*[*].netPerfMeter[*].queueSize = 750000 B
**.core[*].server*[*].sctp.arwnd                = 750000

#enum SCTPStreamSchedulers {
#   ROUND_ROBIN            = 0
#   ROUND_ROBIN_PACKET     = 1,
#   RANDOM_SCHEDULE        = 2,
#   RANDOM_SCHEDULE_PACKET = 3,
#   FAIR_BANDWITH          = 4,
#   FAIR_BANDWITH_PACKET   = 5,
#   PRIORITY               = 6,
#   FCFS                   = 7,
#   PATH_ROUND_ROBIN       = 8,
#   PATH_MAP_TO_PATH       = 9
#};

**.ssModule                       = 8

**.allowQoSTracking               = true
**.qosTrackingInterval            = 5s


**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
**.cmtUseSFR                      = true
**.cmtUseDAC                      = true
**.cmtUseFRC                      = true

**.sackNow                        = true
**.packetDrop                     = true
**.highSpeedCC                    = false
**.checkSackSeqNumber             = false
**.checkQueues                    = false         # !!! Do not call checkOutstandingBytes() -> significant speed-up!

**.nrSack                         = true          # !!!
**.cmtSmartT3Reset                = true          # !!!
**.cmtSmartFastRTX                = true          # !!!
**.cmtSmartReneging               = true          # !!!
**.cmtSlowPathRTTUpdate           = true          # !!!

**.cmtBufferSplitVariant          = "bothSides"   # !!!
**.cmtBufferSplittingUsesOSB      = true          # !!!

**.cmtSendBufferControlVariant    = "none"        # !!!
**.cmtSendBufferBlockThreshold    = 0.5
**.cmtSuspendPathOnBlocking       = false
**.cmtMovedChunksReduceCwnd       = true          # !!!!!!
#**.maxBurstVariant = "congestionWindowLimiting"
#**.maxBurstVariant = "aggressiveMaxBurst"
#**.maxBurstVariant = "maxBurst"
**.maxBurstVariant = "useItOrLoseIt"
**.maxBurst = 4

cmttest4.core[0].westernCoreRouter[*].pppg$o[0].channel.datarate = 100 Mbps
cmttest4.core[0].westernCoreRouter[*].pppg$o[0].channel.delay    = 1 ms
cmttest4.core[0].easternCoreRouter[*].pppg$o[0].channel.datarate = 100 Mbps
cmttest4.core[0].easternCoreRouter[*].pppg$o[0].channel.delay    = 1 ms

cmttest4.core[1].westernCoreRouter[*].pppg$o[0].channel.datarate = 100 Mbps
cmttest4.core[1].westernCoreRouter[*].pppg$o[0].channel.delay    = 10 ms
cmttest4.core[1].easternCoreRouter[*].pppg$o[0].channel.datarate = 100 Mbps
cmttest4.core[1].easternCoreRouter[*].pppg$o[0].channel.delay    = 10 ms
